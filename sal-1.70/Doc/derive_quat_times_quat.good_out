GCL (GNU Common Lisp)  Version(2.5.0) Thu Jan 30 02:37:51 CST 2003
Licensed under GNU Library General Public License
Contains Enhancements by W. Schelter

Use (help) to get some basic information on how to use GCL.
Maxima 5.9.0 http://maxima.sourceforge.net
Distributed under the GNU Public License. See the file COPYING.
Dedicated to the memory of William Schelter.
This is a development version of Maxima. The function bug_report()
provides bug reporting information.
(C1) 		     BATCH(derive_quat_times_quat.maxima)

batching #pc:/Projects/GDS/sal/main/Doc/derive_quat_times_quat.maxima
(C2) 				  LINEL : 120
(C3) 			   FILE_SEARCH_MAXIMA : APPEND([./###.{maxima}], FILE_SEARCH_MAXIMA)
(C4) 						    BATCH(math_util)

batching #pc:/Projects/GDS/sal/main/Doc/math_util.maxima
(C5) 			      cross(a, b) := [a  b  - a  b , a  b  - a  b , a  b  - a  b ]
					       2  3    3  2   3	 1    1	 3   1  2    2  1
(D6) 						   ./math_util.maxima
(C6) quat_times_vect(Q, r) := BLOCK([a], a : [Q  r  - Q  r , Q  r  - Q  r , Q  r  - Q  r ], 
					       2  3    3  2   3	 1    1	 3   1  2    2  1

	 EXPAND([2 (- Q  a  + Q  a  + Q  a ) + r , 2 (- Q  a  + Q  a  + Q  a ) + r , 2 (- Q  a  + Q  a  + Q  a ) + r ]))
		       3  2    2  3    4  1     1	 1  3	 3  1	 4  2	  2	   2  1	   1  2	   4  3	    3
(C7) quat_times_quat(Qa, Qb) := [Qa  Qb  + Qa  Qb  - Qa  Qb  + Qa  Qb , Qa  Qb  + Qa  Qb  + Qa  Qb  - Qa  Qb , 
				   1   4     4	 1     3   2	 2   3	  2   4	    3   1     4	  2     1   3

					   Qa  Qb  - Qa  Qb  + Qa  Qb  + Qa  Qb , Qa  Qb  - Qa  Qb  - Qa  Qb  - Qa  Qb ]
					     3	 4     2   1	 1   2	   4   3    4   4     1	  1     2   2	  3   3
(C8) 						  r : [r_x, r_y, r_z]
(C9) 					     Qa : [Qa_x, Qa_y, Qa_z, Qa_s]
(C10) 					     Qb : [Qb_x, Qb_y, Qb_z, Qb_s]
(C11) 					      Qc : quat_times_quat(Qa, Qb)
(C12) 					     Qb_r : quat_times_vect(Qb, r)
(C13) 				       QaQb_r : EXPAND(quat_times_vect(Qa, Qb_r))
(C14) 					 Qc_r : EXPAND(quat_times_vect(Qc, r))
							 2	 2	 2	    2
(C15) 		        QaQb_r_1 : EXPAND(RATSUBST(- Qb_z  - Qb_y  - Qb_x  + 1, Qb_s , QaQb_r))
							2       2       2	   2
(C16) 		       QaQb_r_1 : EXPAND(RATSUBST(- Qa_z  - Qa_y  - Qa_x  + 1, Qa_s , QaQb_r_1))
							 2	 2	 2	    2
(C17) 			  Qc_r_1 : EXPAND(RATSUBST(- Qb_z  - Qb_y  - Qb_x  + 1, Qb_s , Qc_r))
							2       2       2	   2
(C18) 			 Qc_r_1 : EXPAND(RATSUBST(- Qa_z  - Qa_y  - Qa_x  + 1, Qa_s , Qc_r_1))
(C19) 						 IS(QaQb_r_1 = Qc_r_1)
(D19) 							  TRUE
(D20) 					     derive_quat_times_quat.maxima
