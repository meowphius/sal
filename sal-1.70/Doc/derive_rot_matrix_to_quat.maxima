/* Derivations for spacecraft_math.tex: eqn:rot_matrix_to_quat */
linel : 120$
FILE_SEARCH_MAXIMA : append (["./###.{maxima}"], FILE_SEARCH_MAXIMA)$

batch ("math_util");

/* eqn:quat_to_rot_matrix */
M : matrix
  ([1 - 2 * Q_z^2 - 2 * Q_y^2, 
    2 * Q_x * Q_y - 2 * Q_s * Q_z,
    2 * Q_x * Q_z + 2 * Q_s * Q_y],
   [2 * Q_s * Q_z + 2 * Q_x * Q_y,
    1 - 2 * Q_z^2 - 2 * Q_x^2,
    2 * Q_y * Q_z - 2 * Q_s * Q_x],
   [2 * Q_x * Q_z - 2 * Q_s * Q_y,
    2 * Q_y * Q_z + 2 * Q_s * Q_x,
    1 - 2 * Q_y^2 - 2 * Q_x^2])$

M_xx : M[1,1];
M_yy : M[2,2];
M_zz : M[3,3];

/* eqn:quat_mag_1 */
quat_mag_1 : 1 = Q_x^2 + Q_y^2 + Q_z^2 + Q_s^2$

/* solve for Q_s first */
block
  ([a, b, e],
   a : M_xx + M_yy + M_zz,
   b : ratsubst (1 - Q_s^2, Q_x^2 + Q_y^2 + Q_z^2, a),
   e : 2 * sqrt (1 + b),
   e : subst (Q_s, abs(Q_s), e),
   display (is ((M[3,2] - M[2,3])/e = Q_x)),
   display (is ((M[1,3] - M[3,1])/e = Q_y)),
   display (is ((M[2,1] - M[1,2])/e = Q_z)),
   display (is (e/4 = Q_s)));

/* solve for Q_x */
block
  ([b],
   b : M_xx - M_yy - M_zz,
   e : 2 * sqrt (1 + b),
   e : subst (Q_x, abs(Q_x), e),
   display (is (e/4 = Q_x)),
   display (is ((M[1,2] + M[2,1])/e = Q_y)),
   display (is ((M[1,3] + M[3,1])/e = Q_z)),
   display (is ((M[3,2] - M[2,3])/e = Q_s)));

/* solve for Q_y */
block
  ([c],
   c : -M_xx + M_yy - M_zz,
   e : 2 * sqrt (1 + c),
   e : subst (Q_y, abs(Q_y), e),
   display (is ((M[1,2] + M[2,1])/e = Q_x)),
   display (is (e/4 = Q_y)),
   display (is ((M[2,3] + M[3,2])/e = Q_z)),
   display (is ((M[1,3] - M[3,1])/e = Q_s)));

/* solve for Q_z */
block
  ([d],
   d : -M_xx - M_yy + M_zz,
   e : 2 * sqrt (1 + d),
   e : subst (Q_z, abs(Q_z), e),
   display (is ((M[1,3] + M[3,1])/e = Q_x)),
   display (is ((M[2,3] + M[3,2])/e = Q_y)),
   display (is (e/4 = Q_z)),
   display (is ((M[2,1] - M[1,2])/e = Q_s)));

/* end of file */
