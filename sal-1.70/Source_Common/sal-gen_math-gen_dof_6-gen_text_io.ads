--  Abstract :
--
--  Text_IO for types in SAL.Gen_Math.Gen_DOF_6
--
--  This file is auto-generated by auto_text_io
--  from SAL.Gen_Math.Gen_DOF_6
--
with Boolean_Text_IO; use Boolean_Text_IO;
with SAL.Gen_Array_Text_IO;
with SAL.Gen_Math.Gen_DOF_3.Gen_Text_IO;
with SAL.Gen_Math.Gen_Scalar.Gen_Text_IO;
with SAL.Gen_Math.Gen_Text_IO;
with Ada.Text_IO;
generic
   with package Math_Text_IO is new SAL.Gen_Math.Gen_Text_IO;
   with package Math_Scalar_Text_IO is new Parent_Math_Scalar.Gen_Text_IO
 (Math_Text_IO);
   with package Math_DOF_3_Text_IO is new Parent_Math_DOF_3.Gen_Text_IO
 (Math_Text_IO, Math_Scalar_Text_IO);
package SAL.Gen_Math.Gen_DOF_6.Gen_Text_IO is

   package Dual_Axis_Text_IO is new Ada.Text_IO.Enumeration_IO (Dual_Axis_Type);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Axis_Type;
       Width : in Ada.Text_IO.Field := Dual_Axis_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Axis_Text_IO.Default_Setting)
      renames Dual_Axis_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Axis_Type)
      renames Dual_Axis_Text_IO.Get;
   procedure Put
      (Item  : in Dual_Axis_Type;
       Width : in Ada.Text_IO.Field := Dual_Axis_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Axis_Text_IO.Default_Setting)
      renames Dual_Axis_Text_IO.Put;
   procedure Get
      (Item  :    out Dual_Axis_Type)
      renames Dual_Axis_Text_IO.Get;

   package Dual_Boolean_Text_IO is new SAL.Gen_Array_Text_IO.Enumeration_1D
      (Element_Type             => Boolean,
       Index_Type               => Dual_Axis_Type,
       Index_Array_Element_Type => Dual_Boolean_Type,
       Element_Put              => Put,
       Element_Get              => Get);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Boolean_Type;
       Width : in Ada.Text_IO.Field := Dual_Boolean_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Boolean_Text_IO.Default_Setting;
       Single_Line       : in Boolean := Dual_Boolean_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Boolean_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Boolean_Type;
       Named_Association : in Boolean :=
         Dual_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Boolean_Text_IO.Get;
   procedure Put
      (Item  : in Dual_Boolean_Type;
       Width : in Ada.Text_IO.Field := Dual_Boolean_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Boolean_Text_IO.Default_Setting;
       Single_Line       : in Boolean := Dual_Boolean_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Boolean_Text_IO.Put;
   procedure Get
      (Item  :    out Dual_Boolean_Type;
       Named_Association : in Boolean :=
         Dual_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Boolean_Text_IO.Get;
   procedure Put_Item
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Boolean_Type;
       Single_Line       : in Boolean := Dual_Boolean_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Boolean_Text_IO.Put_Item;
   procedure Get_Item
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Boolean_Type;
       Named_Association : in Boolean :=
         Dual_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Boolean_Text_IO.Get_Item;

   package Dual_Real_Text_IO is new SAL.Gen_Array_Text_IO.Float_1D
      (Element_Type             => Real_Type,
       Index_Type               => Dual_Axis_Type,
       Index_Array_Element_Type => Dual_Real_Type,
       Element_Put              => Math_Text_IO.Put,
       Element_Get              => Math_Text_IO.Get);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Real_Type;
       Fore  : in Ada.Text_IO.Field := Dual_Real_Text_IO.Default_Fore;
       Aft   : in Ada.Text_IO.Field := Dual_Real_Text_IO.Default_Aft;
       Exp   : in Ada.Text_IO.Field := Dual_Real_Text_IO.Default_Exp;
       Single_Line       : in Boolean := Dual_Real_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Real_Text_IO.Default_Named_Association)
      renames Dual_Real_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Real_Type;
       Width : in     Ada.Text_IO.Field := 0;
       Named_Association : in Boolean :=
         Dual_Real_Text_IO.Default_Named_Association)
      renames Dual_Real_Text_IO.Get;
   procedure Put
      (Item  : in Dual_Real_Type;
       Fore  : in Ada.Text_IO.Field := Dual_Real_Text_IO.Default_Fore;
       Aft   : in Ada.Text_IO.Field := Dual_Real_Text_IO.Default_Aft;
       Exp   : in Ada.Text_IO.Field := Dual_Real_Text_IO.Default_Exp;
       Single_Line       : in Boolean := Dual_Real_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Real_Text_IO.Default_Named_Association)
      renames Dual_Real_Text_IO.Put;
   procedure Get
      (Item  :    out Dual_Real_Type;
       Width : in     Ada.Text_IO.Field := 0;
       Named_Association : in Boolean :=
         Dual_Real_Text_IO.Default_Named_Association)
      renames Dual_Real_Text_IO.Get;
   procedure Put_Item
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Real_Type;
       Single_Line       : in Boolean := Dual_Real_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Real_Text_IO.Default_Named_Association)
      renames Dual_Real_Text_IO.Put_Item;
   procedure Get_Item
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Real_Type;
       Named_Association : in Boolean :=
         Dual_Real_Text_IO.Default_Named_Association)
      renames Dual_Real_Text_IO.Get_Item;

   package Dual_Limit_Text_IO is new SAL.Gen_Array_Text_IO.Private_1D
      (Element_Type             => Math_Scalar.Limit_Type,
       Index_Type               => Dual_Axis_Type,
       Index_Array_Element_Type => Dual_Limit_Type,
       Element_Put              => Math_Scalar_Text_IO.Put_Item,
       Element_Get              => Math_Scalar_Text_IO.Get_Item);
   procedure Put
      (File                      : in Ada.Text_IO.File_Type;
       Item                      : in Dual_Limit_Type;
       Single_Line_Array         : in Boolean := Dual_Limit_Text_IO.Default_Single_Line_Array;
       Named_Association_Array   : in Boolean := Dual_Limit_Text_IO.Default_Named_Association_Array;
       Single_Line_Element       : in Boolean := Dual_Limit_Text_IO.Default_Single_Line_Element;
       Named_Association_Element : in Boolean :=
         Dual_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Limit_Text_IO.Put;
   procedure Put
      (Item                : in Dual_Limit_Type;
       Single_Line_Array         : in Boolean := Dual_Limit_Text_IO.Default_Single_Line_Array;
       Named_Association_Array   : in Boolean := Dual_Limit_Text_IO.Default_Named_Association_Array;
       Single_Line_Element       : in Boolean := Dual_Limit_Text_IO.Default_Single_Line_Element;
       Named_Association_Element : in Boolean :=
         Dual_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Limit_Text_IO.Put;
   procedure Put_Item
      (File                 : in Ada.Text_IO.File_Type;
       Item                 : in Dual_Limit_Type;
       Single_Line          : in Boolean := Dual_Limit_Text_IO.Default_Single_Line_Array;
       Named_Association    : in Boolean := Dual_Limit_Text_IO.Default_Named_Association_Array)
      renames Dual_Limit_Text_IO.Put_Item;
   procedure Get
      (File                      : in     Ada.Text_IO.File_Type;
       Item                      :    out Dual_Limit_Type;
       Named_Association_Array   : in     Boolean :=
         Dual_Limit_Text_IO.Default_Named_Association_Array;
       Named_Association_Element : in     Boolean :=
         Dual_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Limit_Text_IO.Get;
   procedure Get
      (Item                      :    out Dual_Limit_Type;
       Named_Association_Array   : in     Boolean :=
         Dual_Limit_Text_IO.Default_Named_Association_Array;
       Named_Association_Element : in     Boolean :=
         Dual_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Limit_Text_IO.Get;
   procedure Get_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              :    out Dual_Limit_Type;
       Named_Association : in     Boolean := False)
      renames Dual_Limit_Text_IO.Get_Item;

   package Dual_Cart_Axis_Text_IO is new Ada.Text_IO.Enumeration_IO (Dual_Cart_Axis_Type);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Cart_Axis_Type;
       Width : in Ada.Text_IO.Field := Dual_Cart_Axis_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Cart_Axis_Text_IO.Default_Setting)
      renames Dual_Cart_Axis_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Cart_Axis_Type)
      renames Dual_Cart_Axis_Text_IO.Get;
   procedure Put
      (Item  : in Dual_Cart_Axis_Type;
       Width : in Ada.Text_IO.Field := Dual_Cart_Axis_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Cart_Axis_Text_IO.Default_Setting)
      renames Dual_Cart_Axis_Text_IO.Put;
   procedure Get
      (Item  :    out Dual_Cart_Axis_Type)
      renames Dual_Cart_Axis_Text_IO.Get;

   package Dual_Cart_Array_Boolean_Text_IO is new SAL.Gen_Array_Text_IO.Enumeration_1D
      (Element_Type             => Boolean,
       Index_Type               => Dual_Cart_Axis_Type,
       Index_Array_Element_Type => Dual_Cart_Array_Boolean_Type,
       Element_Put              => Put,
       Element_Get              => Get);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Cart_Array_Boolean_Type;
       Width : in Ada.Text_IO.Field := Dual_Cart_Array_Boolean_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Cart_Array_Boolean_Text_IO.Default_Setting;
       Single_Line       : in Boolean := Dual_Cart_Array_Boolean_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Cart_Array_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Cart_Array_Boolean_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Cart_Array_Boolean_Type;
       Named_Association : in Boolean :=
         Dual_Cart_Array_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Cart_Array_Boolean_Text_IO.Get;
   procedure Put
      (Item  : in Dual_Cart_Array_Boolean_Type;
       Width : in Ada.Text_IO.Field := Dual_Cart_Array_Boolean_Text_IO.Default_Width;
       Set   : in Ada.Text_IO.Type_Set := Dual_Cart_Array_Boolean_Text_IO.Default_Setting;
       Single_Line       : in Boolean := Dual_Cart_Array_Boolean_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Cart_Array_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Cart_Array_Boolean_Text_IO.Put;
   procedure Get
      (Item  :    out Dual_Cart_Array_Boolean_Type;
       Named_Association : in Boolean :=
         Dual_Cart_Array_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Cart_Array_Boolean_Text_IO.Get;
   procedure Put_Item
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Cart_Array_Boolean_Type;
       Single_Line       : in Boolean := Dual_Cart_Array_Boolean_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Cart_Array_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Cart_Array_Boolean_Text_IO.Put_Item;
   procedure Get_Item
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Cart_Array_Boolean_Type;
       Named_Association : in Boolean :=
         Dual_Cart_Array_Boolean_Text_IO.Default_Named_Association)
      renames Dual_Cart_Array_Boolean_Text_IO.Get_Item;

   package Dual_Cart_Vector_Text_IO is new SAL.Gen_Array_Text_IO.Float_1D
      (Element_Type             => Real_Type,
       Index_Type               => Dual_Cart_Axis_Type,
       Index_Array_Element_Type => Dual_Cart_Vector_Type,
       Element_Put              => Math_Text_IO.Put,
       Element_Get              => Math_Text_IO.Get);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Cart_Vector_Type;
       Fore  : in Ada.Text_IO.Field := Dual_Cart_Vector_Text_IO.Default_Fore;
       Aft   : in Ada.Text_IO.Field := Dual_Cart_Vector_Text_IO.Default_Aft;
       Exp   : in Ada.Text_IO.Field := Dual_Cart_Vector_Text_IO.Default_Exp;
       Single_Line       : in Boolean := Dual_Cart_Vector_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Cart_Vector_Text_IO.Default_Named_Association)
      renames Dual_Cart_Vector_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Cart_Vector_Type;
       Width : in     Ada.Text_IO.Field := 0;
       Named_Association : in Boolean :=
         Dual_Cart_Vector_Text_IO.Default_Named_Association)
      renames Dual_Cart_Vector_Text_IO.Get;
   procedure Put
      (Item  : in Dual_Cart_Vector_Type;
       Fore  : in Ada.Text_IO.Field := Dual_Cart_Vector_Text_IO.Default_Fore;
       Aft   : in Ada.Text_IO.Field := Dual_Cart_Vector_Text_IO.Default_Aft;
       Exp   : in Ada.Text_IO.Field := Dual_Cart_Vector_Text_IO.Default_Exp;
       Single_Line       : in Boolean := Dual_Cart_Vector_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Cart_Vector_Text_IO.Default_Named_Association)
      renames Dual_Cart_Vector_Text_IO.Put;
   procedure Get
      (Item  :    out Dual_Cart_Vector_Type;
       Width : in     Ada.Text_IO.Field := 0;
       Named_Association : in Boolean :=
         Dual_Cart_Vector_Text_IO.Default_Named_Association)
      renames Dual_Cart_Vector_Text_IO.Get;
   procedure Put_Item
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Dual_Cart_Vector_Type;
       Single_Line       : in Boolean := Dual_Cart_Vector_Text_IO.Default_Single_Line;
       Named_Association : in Boolean :=
         Dual_Cart_Vector_Text_IO.Default_Named_Association)
      renames Dual_Cart_Vector_Text_IO.Put_Item;
   procedure Get_Item
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Dual_Cart_Vector_Type;
       Named_Association : in Boolean :=
         Dual_Cart_Vector_Text_IO.Default_Named_Association)
      renames Dual_Cart_Vector_Text_IO.Get_Item;

   package Dual_Cart_Array_Limit_Text_IO is new SAL.Gen_Array_Text_IO.Private_1D
      (Element_Type             => Math_Scalar.Limit_Type,
       Index_Type               => Dual_Cart_Axis_Type,
       Index_Array_Element_Type => Dual_Cart_Array_Limit_Type,
       Element_Put              => Math_Scalar_Text_IO.Put_Item,
       Element_Get              => Math_Scalar_Text_IO.Get_Item);
   procedure Put
      (File                      : in Ada.Text_IO.File_Type;
       Item                      : in Dual_Cart_Array_Limit_Type;
       Single_Line_Array         : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Single_Line_Array;
       Named_Association_Array   : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Array;
       Single_Line_Element       : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Single_Line_Element;
       Named_Association_Element : in Boolean :=
         Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Cart_Array_Limit_Text_IO.Put;
   procedure Put
      (Item                : in Dual_Cart_Array_Limit_Type;
       Single_Line_Array         : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Single_Line_Array;
       Named_Association_Array   : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Array;
       Single_Line_Element       : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Single_Line_Element;
       Named_Association_Element : in Boolean :=
         Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Cart_Array_Limit_Text_IO.Put;
   procedure Put_Item
      (File                 : in Ada.Text_IO.File_Type;
       Item                 : in Dual_Cart_Array_Limit_Type;
       Single_Line          : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Single_Line_Array;
       Named_Association    : in Boolean := Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Array)
      renames Dual_Cart_Array_Limit_Text_IO.Put_Item;
   procedure Get
      (File                      : in     Ada.Text_IO.File_Type;
       Item                      :    out Dual_Cart_Array_Limit_Type;
       Named_Association_Array   : in     Boolean :=
         Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Array;
       Named_Association_Element : in     Boolean :=
         Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Cart_Array_Limit_Text_IO.Get;
   procedure Get
      (Item                      :    out Dual_Cart_Array_Limit_Type;
       Named_Association_Array   : in     Boolean :=
         Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Array;
       Named_Association_Element : in     Boolean :=
         Dual_Cart_Array_Limit_Text_IO.Default_Named_Association_Element)
      renames Dual_Cart_Array_Limit_Text_IO.Get;
   procedure Get_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              :    out Dual_Cart_Array_Limit_Type;
       Named_Association : in     Boolean := False)
      renames Dual_Cart_Array_Limit_Text_IO.Get_Item;

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Pose_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in Pose_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in Pose_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Pose_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out Pose_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Pose_Type;
       Named_Association : in     Boolean := False);

   package DC_Array_DCV_Text_IO is new SAL.Gen_Array_Text_IO.Private_1D
      (Element_Type             => Dual_Cart_Vector_Type,
       Index_Type               => Dual_Cart_Axis_Type,
       Index_Array_Element_Type => DC_Array_DCV_Type,
       Element_Put              => Put_Item,
       Element_Get              => Get_Item);
   procedure Put
      (File                      : in Ada.Text_IO.File_Type;
       Item                      : in DC_Array_DCV_Type;
       Single_Line_Array         : in Boolean := DC_Array_DCV_Text_IO.Default_Single_Line_Array;
       Named_Association_Array   : in Boolean := DC_Array_DCV_Text_IO.Default_Named_Association_Array;
       Single_Line_Element       : in Boolean := DC_Array_DCV_Text_IO.Default_Single_Line_Element;
       Named_Association_Element : in Boolean :=
         DC_Array_DCV_Text_IO.Default_Named_Association_Element)
      renames DC_Array_DCV_Text_IO.Put;
   procedure Put
      (Item                : in DC_Array_DCV_Type;
       Single_Line_Array         : in Boolean := DC_Array_DCV_Text_IO.Default_Single_Line_Array;
       Named_Association_Array   : in Boolean := DC_Array_DCV_Text_IO.Default_Named_Association_Array;
       Single_Line_Element       : in Boolean := DC_Array_DCV_Text_IO.Default_Single_Line_Element;
       Named_Association_Element : in Boolean :=
         DC_Array_DCV_Text_IO.Default_Named_Association_Element)
      renames DC_Array_DCV_Text_IO.Put;
   procedure Put_Item
      (File                 : in Ada.Text_IO.File_Type;
       Item                 : in DC_Array_DCV_Type;
       Single_Line          : in Boolean := DC_Array_DCV_Text_IO.Default_Single_Line_Array;
       Named_Association    : in Boolean := DC_Array_DCV_Text_IO.Default_Named_Association_Array)
      renames DC_Array_DCV_Text_IO.Put_Item;
   procedure Get
      (File                      : in     Ada.Text_IO.File_Type;
       Item                      :    out DC_Array_DCV_Type;
       Named_Association_Array   : in     Boolean :=
         DC_Array_DCV_Text_IO.Default_Named_Association_Array;
       Named_Association_Element : in     Boolean :=
         DC_Array_DCV_Text_IO.Default_Named_Association_Element)
      renames DC_Array_DCV_Text_IO.Get;
   procedure Get
      (Item                      :    out DC_Array_DCV_Type;
       Named_Association_Array   : in     Boolean :=
         DC_Array_DCV_Text_IO.Default_Named_Association_Array;
       Named_Association_Element : in     Boolean :=
         DC_Array_DCV_Text_IO.Default_Named_Association_Element)
      renames DC_Array_DCV_Text_IO.Get;
   procedure Get_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              :    out DC_Array_DCV_Type;
       Named_Association : in     Boolean := False)
      renames DC_Array_DCV_Text_IO.Get_Item;

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Rate_Transform_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in Rate_Transform_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in Rate_Transform_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Rate_Transform_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out Rate_Transform_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Rate_Transform_Type;
       Named_Association : in     Boolean := False);

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Wrench_Transform_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in Wrench_Transform_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in Wrench_Transform_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Wrench_Transform_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out Wrench_Transform_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Wrench_Transform_Type;
       Named_Association : in     Boolean := False);

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Dual_Mag_Axis_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in Dual_Mag_Axis_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in Dual_Mag_Axis_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Dual_Mag_Axis_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out Dual_Mag_Axis_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Dual_Mag_Axis_Type;
       Named_Association : in     Boolean := False);

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Mass_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in Mass_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in Mass_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Mass_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out Mass_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Mass_Type;
       Named_Association : in     Boolean := False);

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in CM_Mass_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in CM_Mass_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in CM_Mass_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out CM_Mass_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out CM_Mass_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out CM_Mass_Type;
       Named_Association : in     Boolean := False);

   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in CM_Inverse_Mass_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put
      (Item                        : in CM_Inverse_Mass_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False);
   procedure Put_Item
      (File              : in Ada.Text_IO.File_Type;
       Item              : in CM_Inverse_Mass_Type;
       Single_Line       : in Boolean := False;
       Named_Association : in Boolean := False);

   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out CM_Inverse_Mass_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get
      (Item                        :    out CM_Inverse_Mass_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False);
   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out CM_Inverse_Mass_Type;
       Named_Association : in     Boolean := False);

end SAL.Gen_Math.Gen_DOF_6.Gen_Text_IO;
