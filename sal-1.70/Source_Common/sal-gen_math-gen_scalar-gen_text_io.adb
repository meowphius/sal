--  Abstract :
--
--  See spec. This file is auto-generated by auto_text_io
--  from SAL.Gen_Math.Gen_Scalar
--
with SAL.Text_IO_Utils; use SAL.Text_IO_Utils;
package body SAL.Gen_Math.Gen_Scalar.Gen_Text_IO is

   use Ada.Text_IO;

   procedure Put_Limit
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Limit_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False)
   is separate;
   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Limit_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False)
   renames Put_Limit;

   procedure Put
      (Item                        : in Limit_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False)
   is
   begin
      Put (Current_Output, Item, Single_Line_Record, Named_Association_Record,
           Single_Line_Component, Named_Association_Component);
   end Put;

   procedure Put_Item
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Limit_Type;
       Single_Line                 : in Boolean := False;
       Named_Association           : in Boolean := False)
   is
   begin
      Put (File, Item, Single_Line, Named_Association,
           Single_Line, Named_Association);
   end Put_Item;

   procedure Get_Limit
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Limit_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False)
   is separate;
   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Limit_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False)
   renames Get_Limit;
   procedure Get
      (Item                        :    out Limit_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False)
   is begin
      Get (Current_Input, Item, Named_Association_Record, Named_Association_Component);
   end Get;

   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Limit_Type;
       Named_Association : in     Boolean := False)
   is begin
      Get (File, Item, Named_Association, Named_Association);
   end Get_Item;

   procedure Put_Trig_Pair
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Trig_Pair_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False)
   is separate;
   procedure Put
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Trig_Pair_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False)
   renames Put_Trig_Pair;

   procedure Put
      (Item                        : in Trig_Pair_Type;
       Single_Line_Record          : in Boolean := True;
       Named_Association_Record    : in Boolean := False;
       Single_Line_Component       : in Boolean := True;
       Named_Association_Component : in Boolean := False)
   is
   begin
      Put (Current_Output, Item, Single_Line_Record, Named_Association_Record,
           Single_Line_Component, Named_Association_Component);
   end Put;

   procedure Put_Item
      (File                        : in Ada.Text_IO.File_Type;
       Item                        : in Trig_Pair_Type;
       Single_Line                 : in Boolean := False;
       Named_Association           : in Boolean := False)
   is
   begin
      Put (File, Item, Single_Line, Named_Association,
           Single_Line, Named_Association);
   end Put_Item;

   procedure Get_Trig_Pair
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Trig_Pair_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False)
   is separate;
   procedure Get
      (File                        : in     Ada.Text_IO.File_Type;
       Item                        :    out Trig_Pair_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False)
   renames Get_Trig_Pair;
   procedure Get
      (Item                        :    out Trig_Pair_Type;
       Named_Association_Record    : in     Boolean := False;
       Named_Association_Component : in     Boolean := False)
   is begin
      Get (Current_Input, Item, Named_Association_Record, Named_Association_Component);
   end Get;

   procedure Get_Item
      (File              : in     Ada.Text_IO.File_Type;
       Item              :    out Trig_Pair_Type;
       Named_Association : in     Boolean := False)
   is begin
      Get (File, Item, Named_Association, Named_Association);
   end Get_Item;

end SAL.Gen_Math.Gen_Scalar.Gen_Text_IO;
